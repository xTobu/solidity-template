/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Greeter, GreeterInterface } from "../Greeter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "greeting",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000a6938038062000a69833981016040819052620000349162000199565b6200006460405180606001604052806022815260200162000a4760229139826200008160201b620003451760201c565b805162000079906000906020840190620000f3565b505062000333565b620000ce82826040516024016200009a9291906200027b565b60408051601f198184030181529190526020810180516001600160e01b03908116634b5c427760e01b17909152620000d216565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b8280546200010190620002e0565b90600052602060002090601f01602090048101928262000125576000855562000170565b82601f106200014057805160ff191683800117855562000170565b8280016001018555821562000170579182015b828111156200017057825182559160200191906001019062000153565b506200017e92915062000182565b5090565b5b808211156200017e576000815560010162000183565b600060208284031215620001ab578081fd5b81516001600160401b0380821115620001c2578283fd5b818401915084601f830112620001d6578283fd5b815181811115620001eb57620001eb6200031d565b604051601f8201601f19908116603f011681019083821181831017156200021657620002166200031d565b816040528281528760208487010111156200022f578586fd5b62000242836020830160208801620002ad565b979650505050505050565b6000815180845262000267816020860160208601620002ad565b601f01601f19169290920160200192915050565b6040815260006200029060408301856200024d565b8281036020840152620002a481856200024d565b95945050505050565b60005b83811015620002ca578181015183820152602001620002b0565b83811115620002da576000848401525b50505050565b600181811c90821680620002f557607f821691505b602082108114156200031757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61070480620003436000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063a413686214610046578063cfae32171461005b578063ef690cc014610079575b600080fd5b6100596100543660046104d6565b610081565b005b610063610225565b60405161007091906105c8565b60405180910390f35b6100636102b7565b61012e6040518060600160405280602381526020016106d560239139600080546100aa90610683565b80601f01602080910402602001604051908101604052809291908181526020018280546100d690610683565b80156101235780601f106100f857610100808354040283529160200191610123565b820191906000526020600020905b81548152906001019060200180831161010657829003601f168201915b50505050508361038a565b6040516315195cdd60e21b6020820152602401604051602081830303815290604052805190602001208160405160200161016891906105ac565b60405160208183030381529060405280519060200120141561020e576101c26040518060400160405280602081526020017f4572726f722c206e6f7420616c6c6f77206772656574696e67202754657374278152506103d6565b60405162461bcd60e51b815260206004820152601060248201527f6772656574696e67206973205465737400000000000000000000000000000000604482015260640160405180910390fd5b805161022190600090602084019061043d565b5050565b60606000805461023490610683565b80601f016020809104026020016040519081016040528092919081815260200182805461026090610683565b80156102ad5780601f10610282576101008083540402835291602001916102ad565b820191906000526020600020905b81548152906001019060200180831161029057829003601f168201915b5050505050905090565b600080546102c490610683565b80601f01602080910402602001604051908101604052809291908181526020018280546102f090610683565b801561033d5780601f106103125761010080835404028352916020019161033d565b820191906000526020600020905b81548152906001019060200180831161032057829003601f168201915b505050505081565b610221828260405160240161035b9291906105e2565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b17905261041c565b6103d18383836040516024016103a293929190610610565b60408051601f198184030181529190526020810180516001600160e01b0316632ced7cef60e01b17905261041c565b505050565b610419816040516024016103ea91906105c8565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905261041c565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b82805461044990610683565b90600052602060002090601f01602090048101928261046b57600085556104b1565b82601f1061048457805160ff19168380011785556104b1565b828001600101855582156104b1579182015b828111156104b1578251825591602001919060010190610496565b506104bd9291506104c1565b5090565b5b808211156104bd57600081556001016104c2565b6000602082840312156104e7578081fd5b813567ffffffffffffffff808211156104fe578283fd5b818401915084601f830112610511578283fd5b813581811115610523576105236106be565b604051601f8201601f19908116603f0116810190838211818310171561054b5761054b6106be565b81604052828152876020848701011115610563578586fd5b826020860160208301379182016020019490945295945050505050565b60008151808452610598816020860160208601610653565b601f01601f19169290920160200192915050565b600082516105be818460208701610653565b9190910192915050565b6020815260006105db6020830184610580565b9392505050565b6040815260006105f56040830185610580565b82810360208401526106078185610580565b95945050505050565b6060815260006106236060830186610580565b82810360208401526106358186610580565b905082810360408401526106498185610580565b9695505050505050565b60005b8381101561066e578181015183820152602001610656565b8381111561067d576000848401525b50505050565b600181811c9082168061069757607f821691505b602082108114156106b857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfe4368616e67696e67206772656574696e672066726f6d202725732720746f2027257327a164736f6c6343000804000a4465706c6f79696e67206120477265657465722077697468206772656574696e673a";

type GreeterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreeterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Greeter__factory extends ContractFactory {
  constructor(...args: GreeterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Greeter";
  }

  deploy(
    _greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Greeter> {
    return super.deploy(_greeting, overrides || {}) as Promise<Greeter>;
  }
  getDeployTransaction(
    _greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }
  static readonly contractName: "Greeter";
  public readonly contractName: "Greeter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
